(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{755:function(t,e,s){"use strict";s.r(e);var a=s(36),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"throttling-guidance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#throttling-guidance"}},[t._v("#")]),t._v(" Throttling Guidance")]),t._v(" "),s("p",[s("strong",[t._v("ABSTRACT")]),s("br"),t._v("\nThrottling limits the number of concurrent calls to a service to prevent overuse of resources. SalesTim API is designed to handle a high volume of requests. If an overwhelming number of requests occurs, throttling helps maintain optimal performance and reliability of the SalesTim API service."),s("br"),t._v("\nThrottling limits vary based on the scenario. For example, if you are performing a large volume of writes, the possibility for throttling is higher than if you are only performing reads.")]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("TABLE OF CONTENTS")]),s("br")]),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#what-happens-when-throttling-occurs"}},[t._v("What happens when throttling occurs?")])]),s("li",[s("a",{attrs:{href:"#common-throttling-scenarios"}},[t._v("Common throttling scenarios")])]),s("li",[s("a",{attrs:{href:"#best-practices-to-avoid-throttling"}},[t._v("Best practices to avoid throttling")])]),s("li",[s("a",{attrs:{href:"#best-practices-to-handle-throttling"}},[t._v("Best practices to handle throttling")])])])]),s("p"),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"what-happens-when-throttling-occurs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-happens-when-throttling-occurs"}},[t._v("#")]),t._v(" What happens when throttling occurs?")]),t._v(" "),s("p",[t._v("When a throttling threshold is exceeded, SalesTim API limits any further requests from that client for a period of time. When throttling occurs, SalesTim API returns HTTP status code 429 (Too many requests), and the requests fail. A suggested wait time is returned in the response header of the failed request.")]),t._v(" "),s("p",[t._v("SalesTim API is conforming to the "),s("a",{attrs:{href:"https://tools.ietf.org/id/draft-polli-ratelimit-headers-01.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IETF ratelimit standardization proposal"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("Note: Throttling behavior can depend on the type and number of requests. For example, if you have a high volume of requests, all requests types are throttled. Threshold limits vary based on the request type. Therefore, you could encounter a scenario where writes are throttled but reads are still permitted.")])]),t._v(" "),s("h2",{attrs:{id:"common-throttling-scenarios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-throttling-scenarios"}},[t._v("#")]),t._v(" Common throttling scenarios")]),t._v(" "),s("p",[t._v("The most common causes of throttling of clients include:")]),t._v(" "),s("ul",[s("li",[t._v("A large number of requests across all applications in a our environments.")]),t._v(" "),s("li",[t._v("A large number of requests from a particular application across all environments.")])]),t._v(" "),s("h2",{attrs:{id:"best-practices-to-avoid-throttling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#best-practices-to-avoid-throttling"}},[t._v("#")]),t._v(" Best practices to avoid throttling")]),t._v(" "),s("p",[t._v("Programming patterns like continuously polling a resource to check for updates and regularly scanning resource collections to check for new or deleted resources are more likely to lead to applications being throttled and degrade overall performances.")]),t._v(" "),s("p",[t._v("Before any throttling, SalesTim API provides two useful headers included in every responses so that you can monitor your own activity level:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("X-RateLimit-Limit")]),t._v(': The limit of requests in a perdiod of time (aka "window")')]),t._v(" "),s("li",[s("code",[t._v("X-RateLimit-Remaining")]),t._v(": The current number of requests that could be made during the current window.")])]),t._v(" "),s("h2",{attrs:{id:"best-practices-to-handle-throttling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#best-practices-to-handle-throttling"}},[t._v("#")]),t._v(" Best practices to handle throttling")]),t._v(" "),s("p",[t._v("The following are best practices for handling throttling:")]),t._v(" "),s("ul",[s("li",[t._v("Reduce the number of operations per request.")]),t._v(" "),s("li",[t._v("Reduce the frequency of calls.")]),t._v(" "),s("li",[t._v("Avoid immediate retries, because all requests accrue against your usage limits.")])]),t._v(" "),s("p",[t._v("When you implement error handling, use the HTTP error code 429 to detect throttling. The failed response includes the "),s("code",[t._v("Retry-After")]),t._v(" response header. Backing off requests using the "),s("code",[t._v("Retry-After")]),t._v(" delay is the fastest way to recover from throttling because SalesTim API continues to log resource usage while a client is being throttled.")]),t._v(" "),s("ol",[s("li",[t._v("Wait the number of seconds specified in the "),s("code",[t._v("Retry-After")]),t._v(" header.")]),t._v(" "),s("li",[t._v("Retry the request.")]),t._v(" "),s("li",[t._v("If the request fails again with a 429 error code, you are still being throttled. Continue to use the recommended "),s("code",[t._v("Retry-After")]),t._v(" delay and retry the request until it succeeds.")])]),t._v(" "),s("blockquote",[s("p",[t._v("If no "),s("code",[t._v("Retry-After")]),t._v(" header is provided by the response, we recommend implementing an exponential backoff retry policy.")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Too many requests, please try again later...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitExceeded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tier 1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Could be 'Tier 1', 'Tier 2' or 'Tier 3'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitWindow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("900000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In ms")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitMax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In # of requests")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Too many requests, please try again later...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitExceeded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tier 1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Could be 'Tier 1', 'Tier 2' or 'Tier 3'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitWindow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("900000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In ms")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitMax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In # of requests")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("In addition to the "),s("code",[t._v("Retry-After")]),t._v(" header, SalesTim API includes "),s("code",[t._v("X-RateLimit-Limit")]),t._v(" and "),s("code",[t._v("X-RateLimit-Remaining")]),t._v(" infos in body of the  throttled response:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Too many requests, please try again later...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitExceeded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tier 1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Could be 'Tier 1', 'Tier 2' or 'Tier 3'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitWindow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("900000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In ms")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimitMax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In # of requests")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("Classification",{attrs:{label:"public"}})],1)}),[],!1,null,null,null);e.default=r.exports}}]);